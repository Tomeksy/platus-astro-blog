---
import { slugify } from '../../utils/helpers';
import { getAllCategories } from '../../utils/content';

const categories = await getAllCategories();
const currentPath = Astro.url.pathname;

// Only show top categories (with most posts)
const topCategories = categories
  .sort((a, b) => b.count - a.count)
  .slice(0, 5);

// Is mobile menu script
---

<header id="site-header" class="fixed w-full top-0 z-50 transition-all duration-300">
  <div class="container mx-auto px-4 py-4 flex justify-between items-center">
    <a href="/" class="relative z-10">
      <img 
        src="/speakii-logo.svg" 
        alt="Speakii Der Hilfsmittelberater Logo" 
        class="h-12 w-auto md:h-16 lg:h-20"
      />
    </a>
    
    <!-- Mobile menu button -->
    <button 
      id="mobile-menu-button" 
      class="relative z-10 block md:hidden"
      aria-label="Toggle menu"
      aria-expanded="false"
      aria-controls="mobile-menu"
    >
      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-800" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7" />
      </svg>
    </button>
    
    <!-- Desktop Navigation -->
    <nav class="hidden md:flex items-center space-x-8">
      <a 
        href="/" 
        class={`text-gray-800 hover:text-primary-600 transition-colors ${currentPath === '/' ? 'font-medium text-primary-700' : ''}`}
      >
        Home
      </a>
      <a 
        href="/blog" 
        class={`text-gray-800 hover:text-primary-600 transition-colors ${currentPath.startsWith('/blog') && currentPath !== '/blog/category' ? 'font-medium text-primary-700' : ''}`}
      >
        Blog
      </a>
      <div class="relative group">
        <button class="flex items-center text-gray-800 hover:text-primary-600 transition-colors">
          <span>Kategorien</span>
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
          </svg>
        </button>
        <div class="absolute z-10 left-0 mt-2 w-48 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 transform origin-top-left">
          <div class="py-1 rounded-md bg-white shadow-xs" role="menu" aria-orientation="vertical">
            {topCategories.map((category) => (
              <a
                href={`/blog/category/${slugify(category.name)}`}
                class={`block px-4 py-2 text-gray-700 hover:bg-primary-50 hover:text-primary-600 ${
                  currentPath === `/blog/category/${slugify(category.name)}` ? 'bg-primary-50 text-primary-700' : ''
                }`}
                role="menuitem"
              >
                {category.name}
              </a>
            ))}
            <a
              href="/blog/categories"
              class="block px-4 py-2 text-gray-700 hover:bg-primary-50 hover:text-primary-600 border-t border-gray-100"
              role="menuitem"
            >
              Alle Kategorien
            </a>
          </div>
        </div>
      </div>
      <a 
        href="/about" 
        class={`text-gray-800 hover:text-primary-600 transition-colors ${currentPath === '/about' ? 'font-medium text-primary-700' : ''}`}
      >
        Über uns
      </a>
    </nav>
    
    <!-- CTA Button -->
    <a 
      href={import.meta.env.PUBLIC_CHATBOT_URL} 
      class="hidden md:flex items-center px-4 py-2 rounded-md bg-accent-500 hover:bg-accent-600 text-white transition-colors shadow-sm"
      target="_blank"
      rel="noopener"
    >
      <span>Chatbot öffnen</span>
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
      </svg>
    </a>
  </div>
  
  <!-- Mobile Navigation -->
  <div
    id="mobile-menu"
    class="fixed inset-0 bg-white z-40 transform -translate-x-full transition-transform duration-300 ease-in-out md:hidden"
  >
    <div class="flex flex-col h-full">
      <div class="px-4 py-6 flex justify-end">
        <button 
          id="mobile-menu-close" 
          aria-label="Close menu"
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-800" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      <nav class="px-4 py-2 flex-1 overflow-y-auto">
        <ul class="space-y-4">
          <li>
            <a 
              href="/" 
              class={`block text-lg py-2 ${currentPath === '/' ? 'text-primary-700 font-medium' : 'text-gray-800'}`}
            >
              Home
            </a>
          </li>
          <li>
            <a 
              href="/blog" 
              class={`block text-lg py-2 ${currentPath.startsWith('/blog') && !currentPath.includes('/category/') ? 'text-primary-700 font-medium' : 'text-gray-800'}`}
            >
              Blog
            </a>
          </li>
          <li>
            <div class="py-2">
              <button 
                id="categories-toggle" 
                class="flex items-center justify-between w-full text-lg text-left text-gray-800"
                aria-expanded="false"
              >
                <span>Kategorien</span>
                <svg id="categories-icon" xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 transform transition-transform" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                </svg>
              </button>
              <div id="categories-dropdown" class="mt-2 hidden">
                <ul class="pl-4 border-l border-gray-200 space-y-2">
                  {topCategories.map((category) => (
                    <li>
                      <a 
                        href={`/blog/category/${slugify(category.name)}`}
                        class={`block py-1 ${
                          currentPath === `/blog/category/${slugify(category.name)}` ? 'text-primary-700' : 'text-gray-700'
                        }`}
                      >
                        {category.name}
                      </a>
                    </li>
                  ))}
                  <li>
                    <a 
                      href="/blog/categories"
                      class="block py-1 mt-2 text-primary-600 font-medium"
                    >
                      Alle Kategorien
                    </a>
                  </li>
                </ul>
              </div>
            </div>
          </li>
          <li>
            <a 
              href="/about" 
              class={`block text-lg py-2 ${currentPath === '/about' ? 'text-primary-700 font-medium' : 'text-gray-800'}`}
            >
              Über uns
            </a>
          </li>
        </ul>
      </nav>
      <div class="p-4 border-t border-gray-100">
        <a 
          href={import.meta.env.PUBLIC_CHATBOT_URL}
          class="block w-full py-3 px-4 bg-accent-500 hover:bg-accent-600 text-white text-center rounded-md shadow-sm transition-colors"
          target="_blank"
          rel="noopener"
        >
          Chatbot öffnen
        </a>
      </div>
    </div>
  </div>
</header>

<script>
  // Header scroll behavior
  const header = document.getElementById('site-header');
  let lastScrollY = window.scrollY;
  
  function updateHeaderStyles() {
    if (window.scrollY > 50) {
      header.classList.add('bg-white', 'shadow-md');
      header.classList.remove('py-4');
      header.classList.add('py-2');
    } else {
      header.classList.remove('bg-white', 'shadow-md');
      header.classList.add('py-4');
      header.classList.remove('py-2');
    }
    
    // Auto-hide header when scrolling down on mobile
    if (window.innerWidth < 768) {
      if (window.scrollY > lastScrollY && window.scrollY > 150) {
        header.classList.add('-translate-y-full');
      } else {
        header.classList.remove('-translate-y-full');
      }
      lastScrollY = window.scrollY;
    }
  }
  
  // Mobile menu functionality
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenuClose = document.getElementById('mobile-menu-close');
  const mobileMenu = document.getElementById('mobile-menu');
  const categoriesToggle = document.getElementById('categories-toggle');
  const categoriesDropdown = document.getElementById('categories-dropdown');
  const categoriesIcon = document.getElementById('categories-icon');
  
  function toggleMobileMenu() {
    const isExpanded = mobileMenuButton.getAttribute('aria-expanded') === 'true';
    mobileMenuButton.setAttribute('aria-expanded', !isExpanded);
    
    if (isExpanded) {
      mobileMenu.classList.remove('translate-x-0');
      mobileMenu.classList.add('-translate-x-full');
      document.body.classList.remove('overflow-hidden');
    } else {
      mobileMenu.classList.add('translate-x-0');
      mobileMenu.classList.remove('-translate-x-full');
      document.body.classList.add('overflow-hidden');
    }
  }
  
  function toggleCategoriesDropdown() {
    const isExpanded = categoriesToggle.getAttribute('aria-expanded') === 'true';
    categoriesToggle.setAttribute('aria-expanded', !isExpanded);
    
    if (isExpanded) {
      categoriesDropdown.classList.add('hidden');
      categoriesIcon.classList.remove('rotate-180');
    } else {
      categoriesDropdown.classList.remove('hidden');
      categoriesIcon.classList.add('rotate-180');
    }
  }
  
  // Initialize
  updateHeaderStyles();
  window.addEventListener('scroll', updateHeaderStyles);
  window.addEventListener('resize', updateHeaderStyles);
  
  mobileMenuButton.addEventListener('click', toggleMobileMenu);
  mobileMenuClose.addEventListener('click', toggleMobileMenu);
  categoriesToggle.addEventListener('click', toggleCategoriesDropdown);
</script>